desc "Bump version for Android"
lane :bump_version_android do |options|
  version_type = options[:version_type] || "patch"
  root_dir = File.expand_path('..', Dir.pwd)
  
  package_json_path = File.join(root_dir, 'package.json')
  version_file_path = File.join(root_dir, '.version')

  Dir.chdir(root_dir) do
    sh("yarn version --#{version_type} --no-git-tag-version")
  end
  
  new_version = JSON.parse(File.read(package_json_path))['version']
  sh("echo #{new_version} > #{version_file_path}")

  # Bump Android version
  gradle_file = File.join(root_dir, "android/app/build.gradle")
  
  # Get current version code and increment it
  current_version_code = android_get_version_code(
    gradle_file: gradle_file
  )

  android_set_version_code(
    gradle_file: gradle_file,
    version_code: current_version_code + 1
  )
  
  android_set_version_name(
    gradle_file: gradle_file,
    version_name: new_version
  )

  UI.message("Bumped Android version to #{new_version}")
end

desc "Bump version for iOS"
lane :bump_version_ios do |options|
  # Debugging statements
  sh("echo 'Current directory: ' $(pwd)")
  sh("ls -la")
  
  root_dir = File.expand_path('..', Dir.pwd)
  
  # More debugging
  UI.message("Root directory: #{root_dir}")
  sh("echo 'Root directory contents:'")
  sh("ls -la #{root_dir}")

  package_json_path = File.join(root_dir, 'package.json')
  
  # Read the version from package.json
  new_version = JSON.parse(File.read(package_json_path))['version']

  # Bump iOS version
  increment_version_number(version_number: new_version)
  increment_build_number

  UI.message("Bumped iOS version to #{new_version}")
end
